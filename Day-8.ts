/*
¬°Es hora de seleccionar a los renos m√°s r√°pidos para los viajes de Santa! ü¶åüéÑ
Santa Claus ha organizado unas emocionantes carreras de renos para decidir cu√°les est√°n en mejor forma.

Tu tarea es mostrar el progreso de cada reno en una pista de nieve en formato isom√©trico.

La informaci√≥n que recibes:

indices: Un array de enteros que representan el progreso de cada reno en la pista:
0: El carril est√° vac√≠o.
N√∫mero positivo: La posici√≥n actual del reno desde el inicio de la pista.
N√∫mero negativo: La posici√≥n actual del reno desde el final de la pista.
length: La longitud de cada carril.
Devuelve un string que represente la pista de la carrera:

Cada carril tiene exactamente length posiciones llenas de nieve (~).
Cada reno se representa con la letra r.
Los carriles est√°n numerados al final con /1, /2, etc.
La vista es isom√©trica, por lo que los carriles inferiores est√°n desplazados hacia la derecha.
Ejemplos:
*/

const race1 = drawRace([0, 5, -3], 10)
console.log(race1);
/*
  ~~~~~~~~~~ /1
 ~~~~~r~~~~ /2
~~~~~~~r~~ /3
*/

const race2 = drawRace([2, -1, 0, 5], 8)
console.log(race2);
/*
   ~~r~~~~~ /1
  ~~~~~~~r /2
 ~~~~~~~~ /3
~~~~~r~~ /4
*/

const race3 = drawRace([3, 7, -2], 12)
console.log(race3);
/*
  ~~~r~~~~~~~~ /1
 ~~~~~~~r~~~~ /2
~~~~~~~~~~r~ /3
*/

function drawRace(indices: number[], length: number): string {
  return indices
    .map((index, i) => {
      const offset = indices.length - 1 - i; // Desplazamiento isom√©trico
      const line = "~".repeat(length).split("");
      if (index !== 0) {
        const position = index > 0 ? index : length + index;
        line[position] = "r"; // Coloca el reno en la posici√≥n correcta
      }
      return `${" ".repeat(offset)}${line.join("")} /${i + 1}`;
    })
    .join("\n");
}